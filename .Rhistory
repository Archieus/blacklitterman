Yields <- as.data.frame(lapply(Yields, function(x) as.numeric(as.character(x))))
Yield[is.na(Yields)] <- 0
row.names(Yields) <- TDYlds[,1]
#### Convert Non-Numeric to NA ####
Yields <- as.data.frame(lapply(Yields, function(x) as.numeric(as.character(x))))
Yields[is.na(Yields)] <- 0
row.names(Yields) <- TDYlds[,1]
TsyYlds <- Yields[11,]
rep.row<-function(x,n){matrix(rep(x,each=n),nrow=n)}
TSYMat <- as.data.frame(rep.row(TsyYlds,11))
row.names(TSYMat) <- TDYlds[,1]
Yields - TSYMat
Yields - TsyYields
Yields - TsyYlds
View(TSYMat)
View(TsyYlds)
View(TDYlds)
View(TSYMat)
View(TsyYlds)
view(TsyYlds)
View(TsyYlds)
TsyYlds-Yields
ncol(Yields)
ncol(TsyYlds)
Yields[[1]]
Yields[1]
Yields[1:7]
Yields[1:7][1]
Yields[1:7]-TsyYlds
TsyYlds[1]
TsyYlds[1:7]
TsyYlds
Yields[1:7]-TsyYlds[1:7]
Yields[,1:7]-TsyYlds[,1:7]
Yields[,1:7]-TsyYlds[1:7]
Yields - Yields
str(Yields)
str(TsyYlds)
rep(Yields[11,],11)
Yields[11,]
?replications
?copy
TsyYlds <- c(Yields[11,],Yields[11,])
TsyYlds <- cbind(Yields[11,],Yields[11,])
TsyYlds <- rbind(Yields[11,],Yields[11,])
TsyYlds <- matrix(Yields[11,], nrow =11, ncol = 7)
str(TsyYlds)
TsyYlds <- matrix(Yields[11,], nrow =11, ncol = 7, byrow = TRUE)
re
TsyYlds - TsyYlds
TsyYlds <- as.data.frame(matrix(Yields[11,], nrow =11, ncol = 7, byrow = TRUE))
TsyYlds - TsyYlds
TsyYlds * TsyYlds
TsyYlds <- as.data.frame(matrix(Yields[11,], nrow =11, ncol = 7, byrow = TRUE))
row.names(TsyYlds) <- TDYlds[,1]
TsyYlds <- matrix(Yields[11,], nrow =11, ncol = 7, byrow = TRUE)
row.names(TsyYlds) <- TDYlds[,1]
row.names(TsyYlds) <- TDYlds[11,1]
TsyYlds <- matrix(Yields[11,], nrow =11, ncol = 7, byrow = TRUE)
TsyYlds[1]
TsyYlds[2]
TsyYlds[[2]]
TsyYlds[[7]]
TsyYlds[11]
TsyYlds[1]-Yields[1]
View(TsyYlds)
View(Yields)
Yields[1]-TsyYlds[1]
.566-.349
.153-.349
Yields[[1:7]]
Yields[[1]]
Yields[[1]]-TsyYlds
TsyYlds[1]
TsyYlds[[1]]
TsyYlds[[,1]]
TsyYlds[,1]
TsyYlds[1,]
TsyYlds <- Yields[11,]
TsyYlds
TsyYlds[1]
TsyYlds[2]
TsyYlds[:2]
TsyYlds[1:2]
ncol(TsyYlds)
ncol(Yields)
?vapply
test <- lapply(Yields, function() {x - TsyYlds})
Yields
Yields[1]
Yields[[]]
Yields[[1]]
test <- lapply(Yields[[]], function() {x - TsyYlds})
test <- lapply(Yields, function() {x[[]] - TsyYlds})
str(TsyYlds)
str(Yields)
ncol(Yields)
Yields * TsyYlds
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spread[,i] <- Yields[i] - TsyYlds[i]
}
for(i in 1:7) {
Spread[,i] <- Yields[i] -- TsyYlds[i]
}
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spread[,i] <- diff(Yields[i],TsyYlds[i])
}
for(i in 1:7) {
Spread[,i] <- diff(Yields[i] %-% TsyYlds[i])
}
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spread[,i] <- Yields[i] %-% TsyYlds[i]
}
Yields[1]
Yields[[1]]
for(i in 1:7) {
Spread[,i] <- Yields[[i]] - TsyYlds[i]
}
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spread[,i] <- Yields[[i]] - TsyYlds[i]
}
for(i in 1:7) {
Spreads[,i] <- Yields[[i]] - TsyYlds[i]
}
for(i in 1:7) {
Spreads[,i] <- Yields[[,i]] - TsyYlds[[,i]]
}
for(i in 1:7) {
Spreads[,i] <- Yields[[i]] - TsyYlds[[i]]
}
for(i in 1:7) {
Spreads[,i] <- Yields[[i]] - TsyYlds[i]
}
Yields[,1]
Yields[,2]
TsyYlds
TsyYlds[1]
TsyYlds[2]
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spreads[,i] <- Yields[,i] - TsyYlds[i]
}
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spreads[,i] <- Yields[,i] - TsyYlds[,i]
}
View(Spreads)
row.names(Spreads) <- TDYlds[,1]
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
View(TDYlds)
names(TDYlds)
names(Spread)
names(Spreads)
row.names(Spreads) <- TDYlds[,1]
names(Spreads) <- names(TDYlds[2:8])
print(Spreads)
names(TDYlds)
names(TDYlds[2])
names(TDYlds[8])
View(TDYlds)
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
row.names(Spreads) <- TDYlds[,1]
colnames(Spreads) <- col.names(TDYlds[2:8])
print(Spreads)
colnames(Spreads) <- colnames(TDYlds[2:8])
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
View(TDYlds)
TDYlds
TDYlds<-   read.table("yields.txt", header = TRUE, sep = '\tX') #sep = "tab delimited"
Yields <- TDYlds[,2:8]
row.names(Yields) <- TDYlds[,1]
#### Convert Non-Numeric to NA ####
suppressWarnings(Yields <- as.data.frame(lapply(Yields, function(x) as.numeric(as.character(x)))))
Yields[is.na(Yields)] <- 0 ## Turn NAs to 0
row.names(Yields) <- TDYlds[,1]
TsyYlds <- Yields[11,]
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spreads[,i] <- Yields[,i] - TsyYlds[,i]
}
row.names(Spreads) <- TDYlds[,1]
colnames(Spreads) <- colnames(TDYlds[2:8])
print(Spreads)
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
naming <- gsub(TDYlds, "X","")
View(TDYlds)
?read.table
TDYlds<-   read.table("yields.txt", header = TRUE, col.names = header, sep = '\t') #sep = "tab delimited"
Yields <- TDYlds[,2:8]
row.names(Yields) <- TDYlds[,1]
TDYlds<-   read.table("yields.txt", header = TRUE, col.names = "", sep = '\t') #sep = "tab delimited"
Yields <- TDYlds[,2:8]
row.names(Yields) <- TDYlds[,1]
TDYlds<-   read.table("yields.txt", header = TRUE, col.names = FALSE, sep = '\t') #sep = "tab delimited"
Yields <- TDYlds[,2:8]
row.names(Yields) <- TDYlds[,1]
TDYlds<-   read.table("yields.txt", header = TRUE, col.names = NULL, sep = '\t') #sep = "tab delimited"
Yields <- TDYlds[,2:8]
row.names(Yields) <- TDYlds[,1]
TDYlds<-   read.table("yields.txt", header = FALSE, sep = '\t') #sep = "tab delimited"
View(TDYlds)
TDYlds<-   read.table("yields.txt", header = TRUE, sep = '\t') #sep = "tab delimited"
TDYlds<-   read.table("yields.txt", header = TRUE, check.names = FALSE, sep = '\t') #sep = "tab delimited"
Yields <- TDYlds[,2:8]
row.names(Yields) <- TDYlds[,1]
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
Yields[1:10]
Yields(1:10)
Yields[,1:10]
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
View(Yields)
View(TDYlds)
TDYlds<-   read.table("yields.txt", header = TRUE, check.names = FALSE, sep = '\t') #sep = "tab delimited"
#Yields <- TDYlds[,2:8]
#row.names(Yields) <- TDYlds[,1]
#### Convert Non-Numeric to NA ####
suppressWarnings(Yields <- as.data.frame(lapply(TDYlds, function(x) as.numeric(as.character(x)))))
#Yields[is.na(Yields)] <- 0 ## Turn NAs to 0
row.names(Yields) <- TDYlds[,1]
TsyYlds <- Yields[11,]
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spreads[,i] <- (Yields[,i] - TsyYlds[,i])
}
row.names(Spreads) <- TDYlds[,1]
colnames(Spreads) <- colnames(TDYlds[2:8])
print(TDYlds)
print(Spreads)
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
Yields <- TDYlds[,2:8]
#row.names(Yields) <- TDYlds[,1]
#### Convert Non-Numeric to NA ####
suppressWarnings(Yields <- as.data.frame(lapply(Yields, function(x) as.numeric(as.character(x)))))
#Yields[is.na(Yields)] <- 0 ## Turn NAs to 0
row.names(Yields) <- TDYlds[,1]
TsyYlds <- Yields[11,]
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spreads[,i] <- (Yields[,i] - TsyYlds[,i])
}
row.names(Spreads) <- TDYlds[,1]
colnames(Spreads) <- colnames(TDYlds[2:8])
print(Yields)
print(Spreads)
View(TDYlds)
TDYlds<-   read.table("yields.txt", header = TRUE, check.names = FALSE, sep = '\t') #sep = "tab delimited"
#Yields <- TDYlds[,2:8]
#row.names(Yields) <- TDYlds[,1]
#### Convert Non-Numeric to NA ####
suppressWarnings(Yields <- as.data.frame(lapply(TDYlds, function(x) as.numeric(as.character(x)))))
#Yields[is.na(Yields)] <- 0 ## Turn NAs to 0
row.names(Yields) <- TDYlds[,1]
TsyYlds <- Yields[11,]
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spreads[,i] <- (Yields[,i] - TsyYlds[,i])
}
row.names(Spreads) <- TDYlds[,1]
colnames(Spreads) <- colnames(TDYlds[2:8])
print(Yields)
print(Spreads)
TDYlds<-   read.table("yields.txt", header = TRUE, check.names = FALSE, sep = '\t') #sep = "tab delimited"
Yields <- TDYlds[,2:8]
row.names(Yields) <- TDYlds[,1]
#### Convert Non-Numeric to NA ####
suppressWarnings(Yields <- as.data.frame(lapply(TDYlds, function(x) as.numeric(as.character(x)))))
#Yields[is.na(Yields)] <- 0 ## Turn NAs to 0
row.names(Yields) <- TDYlds[,1]
TsyYlds <- Yields[11,]
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spreads[,i] <- (Yields[,i] - TsyYlds[,i])
}
row.names(Spreads) <- TDYlds[,1]
colnames(Spreads) <- colnames(TDYlds[2:8])
print(Yields)
print(Spreads)
TDYlds<-   read.table("yields.txt", header = TRUE, check.names = FALSE, sep = '\t') #sep = "tab delimited"
Yields <- TDYlds[,2:8]
row.names(Yields) <- TDYlds[,1]
#### Convert Non-Numeric to NA ####
suppressWarnings(Yields <- as.data.frame(lapply(TDYlds, function(x) as.numeric(as.character(x)))))
#Yields[is.na(Yields)] <- 0 ## Turn NAs to 0
row.names(Yields) <- TDYlds[,1]
TsyYlds <- Yields[11,]
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spreads[,i] <- (TDYlds[,i] - TsyYlds[,i])
}
row.names(Spreads) <- TDYlds[,1]
colnames(Spreads) <- colnames(TDYlds[2:8])
print(Yields)
print(Spreads)
View(TDYlds)
View(Yields)
TDYlds<-   read.table("yields.txt", header = TRUE, check.names = FALSE, sep = '\t') #sep = "tab delimited"
View(TDYlds)
Yields <- TDYlds[,2:8]
View(Yields)
row.names(Yields) <- TDYlds[,1]
#### Convert Non-Numeric to NA ####
suppressWarnings(Yields <- as.data.frame(lapply(TDYlds, function(x) as.numeric(as.character(x)))))
View(Yields)
#### Convert Non-Numeric to NA ####
suppressWarnings(Yields <- as.data.frame(lapply(Yields, function(x) as.numeric(as.character(x)))))
View(Yields)
Yields
View(Yields)
View(TDYlds)
View(Yields)
suppressWarnings(Yields <- as.data.frame(lapply(Yields[,], function(x) as.numeric(as.character(x)))))
TDYlds<-   read.table("yields.txt", header = TRUE, check.names = FALSE, sep = '\t') #sep = "tab delimited"
Yields <- TDYlds[,2:8]
suppressWarnings(Yields <- as.data.frame(lapply(Yields[], function(x) as.numeric(as.character(x)))))
View(Yields)
TDYlds<-   read.table("yields.txt", header = TRUE, check.names = FALSE, sep = '\t') #sep = "tab delimited"
Yields <- TDYlds[,2:8]
row.names(Yields) <- TDYlds[,1]
#### Convert Non-Numeric to NA ####
suppressWarnings(Yields <- as.data.frame(lapply(Yields[], function(x) as.numeric(as.character(x)))))
#Yields[is.na(Yields)] <- 0 ## Turn NAs to 0
row.names(Yields) <- TDYlds[,1]
TsyYlds <- Yields[11,]
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spreads[,i] <- (TDYlds[,i] - TsyYlds[,i])
}
row.names(Spreads) <- TDYlds[,1]
colnames(Spreads) <- colnames(TDYlds[2:8])
print(Yields)
print(Spreads)
#### Convert Non-Numeric to NA ####
suppressWarnings(Yields <- as.data.frame(lapply(Yields[], function(x) as.numeric(as.character(x)))))
TDYlds<-   read.table("yields.txt", header = TRUE, check.names = FALSE, sep = '\t') #sep = "tab delimited"
Yields <- TDYlds[,2:8]
row.names(Yields) <- TDYlds[,1]
#### Convert Non-Numeric to NA ####
suppressWarnings(Yields <- as.data.frame(lapply(Yields[], function(x) as.numeric(as.character(x)))))
RandomNumbers <- runif(100, 1, 100)
RandomNumber2 <- runif(100, 1, 100)
plot(RandomNumbers)
par(new = TRUE)
plot(RandomNumber2)
plot(RandomNumber2, type = 'l')
par(new = TRUE)
plot(RandomNumbers)
install.packages(c("lubridate", "openssl", "rlang", "Rsymphony", "tidyselect"))
install.packages("C:/Users/rodney/Downloads/Rsymphony_0.1-27.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/rodney/Downloads/Rsymphony_0.1-28.tar.gz", repos = NULL, type = "source")
library(RCurl)
# library(data.table)
ETH <- getURL('https://etherchain.org/api/statistics/price')
install.packages("rvest")
library(rvest)
url <- 'http://www.barrons.com/public/page/9_0210-wyldgp.html'
#Reading the HTML code from the website
webpage <- read_html(url)
str(webpage)
webpage$node
webpage$doc
setwd("~/")
read.table("~/BarronsConfidence.txt", sep = "")
read.table("~/BarronsConfidence.txt, sep = """)
read.table("~/BarronsConfidence.txt, sep = " "")
read.table("~/BarronsConfidence.txt")
read.table("~/BarronsConfidence.txt", sep = ",")
read.table("~/BarronsConfidence.txt", sep = "\")
read.table("~/BarronsConfidence.txt", sep = "\t")
read.table("~/BarronsConfidence.txt", sep = "\\t")
read.table("~/BarronsConfidence.txt", sep = "\\")
read.table("~/BarronsConfidence.txt", sep = ",")
read.table("~/BarronsConfidence.txt", sep = " ")
read.table("~/BarronsConfidence.txt", sep = "\t")
read.table("~/BarronsConfidence.txt", sep = "\\t")
read.table("~/BarronsConfidence.txt", sep = "/\t")
test <- read.table("~/BarronsConfidence.txt", sep = "\\t")
test <- read.table("~/BarronsConfidence.txt", sep = "\t")
test <- read.table("~/BarronsConfidence.txt", sep = "/t")
test <- read.table("~/BarronsConfidence.txt", sep = "\t")
test <- read.table("~/BarronsConfidence.txt")
test <- read.table("~/BarronsConfidence.txt", sep ="\t")
setwd("~/")
test <- read.table("~/BarronsConfidence.txt", sep ="\t")
scan("~/BarronsConfidence.txt")
test <- read.table("~/BarronsConfidence.txt", sep =",")
View(test)
colno <- max(count.fields("~/BarronsConfidence.txt", sep = ','))
test <- as.data.frame(read.table("~/BarronsConfidence.txt", sep =","))
test <- as.data.frame(read.table("~/BarronsConfidence.txt", sep ="\"))
)
)
test <-read.table("~/BarronsConfidence.txt", sep ="\")
test <-read.table("~/BarronsConfidence.txt", sep ="\\")
View(test)
test <-read.table("~/BarronsConfidence.txt", sep = c("\\", "\\t"))
test <-read.table("~/BarronsConfidence.txt", sep = "\\t")
test <-read.table("~/BarronsConfidence.txt", sep = c("\\t"))
test <-read.table("~/BarronsConfidence.txt", sep = c("\\", "t"))
setwd("~/")
read.table("BarronsConfidence.txt", sep = "\t", dec = ".", header = TRUE, encoding = "UTF-8", stringsAsFactors = FALSE, quote = "")
read.table("BarronsConfidence.txt", sep = "/t", dec = ".", header = TRUE, encoding = "UTF-8", stringsAsFactors = FALSE, quote = "")
read.table("BarronsConfidence.txt", sep = "\\t", dec = ".", header = TRUE, encoding = "UTF-8", stringsAsFactors = FALSE, quote = "")
source('~/.active-rstudio-document', echo=TRUE)
last(BEER)
library(quantmod)
Sys.setenv(TZ = "UTC")
#1. Avg Annual Hourly Earnings All Employees Total Private = CES0500000003
#2. Employed FT median Usual Weekly Real Earnings: Wages and Salasy 16Years and Older = LES1252881600Q
###Correlates best with quarterly Core Inflation Data "ECIWAG"###
#3. Employment Cost Index Wages and Salaries Private industry Workers = ECIWAG
#4. Employer Cost for Emplyee Compensation = Not Available on FRED
#5. Compensation per hour Nonfarm Business Sector: Unit Labor Costs = ULCNFB
#6. Unit Labor Costs = ULCNFB
wagedata <- c("CES0500000003", "LES1252881600Q", "ECIWAG", "ULCNFB")
suppressWarnings(getSymbols(wagedata, src = 'FRED', from = "1997-05-01"))
View(CES0500000003)
View(ECIWAG)
View(LES1252881600Q)
View(ULCNFB)
?getSymbols
?to.period
to.quarterly(CES0500000003,indexAt='yearqtr',drop.time=TRUE)
to.quarterly(CES0500000003,indexAt='yearmon',drop.time=TRUE)
to.quarterly(CES0500000003,indexAt='firstof',drop.time=TRUE)
to.quarterly(CES0500000003,indexAt='startof',drop.time=TRUE)
HourlyEarnings <- to.quarterly(CES0500000003,indexAt='startof',drop.time=TRUE)[,4]
View(HourlyEarnings)
layout(rbind(c(1,2), c(3,4)))
plot(ECIWAG)
plot(HourlyEarnings)
plot(LES1252881600Q)
plot(ULCNFB)
layout(rbind(c(1,2), c(3,4)))
plot(ECIWAG, main  = "Employment Cost Index")
plot(HourlyEarnings, main = "Hourly Earnings")
plot(LES1252881600Q, main = "Real Earnings & Salaries")
plot(ULCNFB, main = "Unit Labor Costs")
ECI.ROC <- na.omit(ROC(ECIWAG,4))
plot(ECI.ROC)
####1-Year ROC####
ECI.ROC <- na.omit(ROC(ECIWAG,4))
HrEa.ROC <- na.omit(ROC(HourlyEarnings,4))
RealES.ROC <- na.omit(ROC(LES1252881600Q,4))
ULC.ROC <- na.omit(ROCULCNFB,4))
####1-Year ROC####
ECI.ROC <- na.omit(ROC(ECIWAG,4))
HrEa.ROC <- na.omit(ROC(HourlyEarnings,4))
RealES.ROC <- na.omit(ROC(LES1252881600Q,4))
ULC.ROC <- na.omit(ROC(ULCNFB,4))
layout(rbind(c(1,2), c(3,4)))
plot(ECI.ROC, main  = "Employment Cost Index 1-Yr ROC")
plot(HrEa.ROC, main = "Hourly Earnings 1-Yr ROC")
plot(RealES.ROC, main = "Real Earnings & Salaries 1-Yr ROC")
plot(ULC.ROC, main = "Unit Labor Costs 1-Yr ROC")
layout(rbind(c(1,2), c(3,4)))
plot(ECIWAG, main  = "Employment Cost Index")
plot(HourlyEarnings, main = "Hourly Earnings")
plot(LES1252881600Q, main = "Real Earnings & Salaries")
plot(ULCNFB, main = "Unit Labor Costs")
layout(rbind(c(1,2), c(3,4)))
plot(ECI.ROC['2009:/'], main  = "Employment Cost Index 1-Yr ROC")
plot(HrEa.ROC['2009:/'], main = "Hourly Earnings 1-Yr ROC")
plot(RealES.ROC['2009:/'], main = "Real Earnings & Salaries 1-Yr ROC")
plot(ULC.ROC['2009:/'], main = "Unit Labor Costs 1-Yr ROC")
# Cleaning the workspace
rm(list=ls())
# RQuantLib loading
suppressPackageStartupMessages(library(RQuantLib))
# ESGtoolkit loading
suppressPackageStartupMessages(library(ESGtoolkit))
install.packages("ESGtoolkit")
source('~/.active-rstudio-document', echo=TRUE)
650*.08625
649.91*.08625
649.91
649.91+56.05
594.12*1.08625
705.96-645.36
330.82-311.88
18.94/330.82
220.32-214.47
5.85/220.32
8000/500
859664/2
429677*.05
21483.85/68.04
429677*.0380
16327.73/30
q()
setwd("C:/RPrograms/BlackLitterman")
library(PerformanceAnalytics)
library(PortfolioAnalytics)
library(fPortfolio)
library(quantmod)
library(BLCOP)
#### Close data from TC2000 Convert TXT to XTS ####
ETFtxt <- read.table('ETFC', header = FALSE, sep = ",")
ETFzoo <- read.zoo(ETFtxt, sep = ",", format = "%m/%d/%Y", split = 3)
ETFxts <- as.xts(ETFzoo)
ETFRet <- na.omit(Return.calculate(ETFxts))
View(ETFRet)
